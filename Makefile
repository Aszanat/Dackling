## File generated by the BNF Converter (bnfc 2.9.5).

# Makefile for building the parser and test program.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : TestDackling

# Rules for building the parser.

AbsDackling.hs LayoutDackling.hs LexDackling.x ParDackling.y PrintDackling.hs TestDackling.hs : dackling.cf
	bnfc --haskell --functor dackling.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

TestDackling : AbsDackling.hs LayoutDackling.hs LexDackling.hs ParDackling.hs PrintDackling.hs TestDackling.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f *.hi *.o *.log *.aux *.dvi

distclean : clean
	-rm -f AbsDackling.hs AbsDackling.hs.bak ComposOp.hs ComposOp.hs.bak DocDackling.txt DocDackling.txt.bak ErrM.hs ErrM.hs.bak LayoutDackling.hs LayoutDackling.hs.bak LexDackling.x LexDackling.x.bak ParDackling.y ParDackling.y.bak PrintDackling.hs PrintDackling.hs.bak SkelDackling.hs SkelDackling.hs.bak TestDackling.hs TestDackling.hs.bak XMLDackling.hs XMLDackling.hs.bak ASTDackling.agda ASTDackling.agda.bak ParserDackling.agda ParserDackling.agda.bak IOLib.agda IOLib.agda.bak Main.agda Main.agda.bak dackling.dtd dackling.dtd.bak TestDackling LexDackling.hs ParDackling.hs ParDackling.info ParDataDackling.hs Makefile


# EOF
